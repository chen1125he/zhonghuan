{
  id: building.id,
  address: building.address,
  district: building.district,
  base_count: building.base_count,
  car_position_count: building.car_position_count,
  decoration_standard: building.decoration_standard,
  delivery_date: building.delivery_date,
  developer: building.developer,
  green_rate: building.green_rate,
  latitude: building.latitude,
  longitude: building.longitude,
  name: building.name,
  phone: building.phone,
  opening_date: building.opening_date,
  plot_ratio: building.plot_ratio,
  price_per_sqm: building.price_per_sqm,
  property_company: building.property_company,
  property_fee_desc: building.property_fee_desc,
  property_type: building.property_type,
  property_year: building.property_year,
  cover_link: building.cover_link,
  tags: building.tags,
  cover: render('api/images/image', image: building.cover),
  poster: render('api/images/image', image: building.poster),
  map: render('api/images/image', image: building.map),
  building_displays: render(partial: 'api/building_displays/building_display', collection: building.building_displays, as: :building_display),
  building_description: render('api/building_descriptions/building_description', building_description: building.building_description),
  advisers: render(partial: 'api/advisers/adviser', collection: building.advisers.order(created_at: :asc), as: :adviser),
  building_visitors: render(partial: 'api/users/user', collection: building.assigned_without_invitor_building_visitors.limit(10).map(&:visitor), as: :user),
  building_visitor_count: building.assigned_without_invitor_building_visitors.count,
  my_building_visitors: render(partial: 'api/users/user', collection: building.assigned_building_visitors.where(invitor: current_user).limit(10).map(&:visitor), as: :user),
  my_building_visitor_count: building.assigned_building_visitors.where(invitor: current_user).count,
}
